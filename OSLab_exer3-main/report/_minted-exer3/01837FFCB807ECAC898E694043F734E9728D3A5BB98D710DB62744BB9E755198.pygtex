\begin{Verbatim}[commandchars=\\\{\}]
\PYG{+w}{ }\PYG{c+cm}{/*}
\PYG{c+cm}{ * Step 10: Get the physical memory address for heap\PYGZus{}shared\PYGZus{}buf.}
\PYG{c+cm}{ * Step 10 \PYGZhy{} Parent}
\PYG{c+cm}{ */}

\PYG{n}{printf}\PYG{p}{(}\PYG{n}{RED}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{Step 10: Write to the shared heap buffer (main) from \PYGZdq{}}
\PYG{+w}{    }\PYG{l+s}{\PYGZdq{}child and get the physical address for both the parent and \PYGZdq{}}
\PYG{+w}{    }\PYG{l+s}{\PYGZdq{}the child. What happened?}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{n}{RESET}\PYG{p}{);}
\PYG{n}{press\PYGZus{}enter}\PYG{p}{();}

\PYG{c+cm}{/*}
\PYG{c+cm}{ * TODO: Write your code here to complete parent\PYGZsq{}s part of Step 10.}
\PYG{c+cm}{ */}

\PYG{n}{pa}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{get\PYGZus{}physical\PYGZus{}address}\PYG{p}{((}\PYG{k+kt}{uint64\PYGZus{}t}\PYG{p}{)}\PYG{n}{heap\PYGZus{}shared\PYGZus{}buf}\PYG{p}{);}

\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}This is the physical address of parent: \PYGZpc{}ld}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{pa}\PYG{p}{);}

\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m+mi}{\PYGZhy{}1}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{kill}\PYG{p}{(}\PYG{n}{child\PYGZus{}pid}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{SIGCONT}\PYG{p}{))}
\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n}{die}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}kill\PYGZdq{}}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m+mi}{\PYGZhy{}1}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{waitpid}\PYG{p}{(}\PYG{n}{child\PYGZus{}pid}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{status}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{WUNTRACED}\PYG{p}{))}
\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n}{die}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}waitpid\PYGZdq{}}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
